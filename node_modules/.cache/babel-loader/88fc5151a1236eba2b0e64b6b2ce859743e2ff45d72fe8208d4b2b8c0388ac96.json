{"ast":null,"code":"var _jsxFileName = \"/Users/paulhwang/code/projects/weather-app/src/context/weather.context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { DEFAULT_PLACE, MEASUREMENT_SYSTEMS, UNITS } from \"../constants\";\nimport { getWeatherData } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nfunction WeatherProvider({\n  children\n}) {\n  _s();\n  const [place, setPlace] = useState(DEFAULT_PLACE);\n  const [loading, setLoading] = useState(true);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [dailyForecast, setDailyForecast] = useState([]);\n  const [measurementSystem, setMeasurementSystem] = useState(MEASUREMENT_SYSTEMS.AUTO);\n  const [units, setUnits] = useState({});\n  useEffect(() => {\n    async function _getWeatherData() {\n      setLoading(true);\n      const cw = await getWeatherData(\"current\", place.place_id, measurementSystem);\n      setCurrentWeather(cw.current);\n      setUnits(UNITS[cw.units]);\n      const hf = await getWeatherData(\"hourly\", place.place_id, measurementSystem);\n      setHourlyForecast(hf.hourly.data);\n      const df = await getWeatherData(\"daily\", place.place_id, measurementSystem);\n      setDailyForecast(df.daily.data);\n      setLoading(false);\n    }\n    _getWeatherData();\n  }, [place, measurementSystem]);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      place,\n      setPlace,\n      loading,\n      currentWeather,\n      hourlyForecast,\n      dailyForecast,\n      measurementSystem,\n      setMeasurementSystem,\n      units\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherProvider, \"4WV9FrOc01S0jxESYhx9YNMWqtc=\");\n_c = WeatherProvider;\nexport { WeatherProvider };\nexport default WeatherContext;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","DEFAULT_PLACE","MEASUREMENT_SYSTEMS","UNITS","getWeatherData","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","place","setPlace","loading","setLoading","currentWeather","setCurrentWeather","hourlyForecast","setHourlyForecast","dailyForecast","setDailyForecast","measurementSystem","setMeasurementSystem","AUTO","units","setUnits","_getWeatherData","cw","place_id","current","hf","hourly","data","df","daily","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paulhwang/code/projects/weather-app/src/context/weather.context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { DEFAULT_PLACE, MEASUREMENT_SYSTEMS, UNITS } from \"../constants\";\nimport { getWeatherData } from \"../api\";\n\nconst WeatherContext = createContext();\n\nfunction WeatherProvider({ children }) {\n  const [place, setPlace] = useState(DEFAULT_PLACE);\n  const [loading, setLoading] = useState(true);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [dailyForecast, setDailyForecast] = useState([]);\n  const [measurementSystem, setMeasurementSystem] = useState(\n    MEASUREMENT_SYSTEMS.AUTO\n  );\n  const [units, setUnits] = useState({});\n\n  useEffect(() => {\n    async function _getWeatherData() {\n      setLoading(true);\n\n      const cw = await getWeatherData(\n        \"current\",\n        place.place_id,\n        measurementSystem\n      );\n      setCurrentWeather(cw.current);\n      setUnits(UNITS[cw.units]);\n\n      const hf = await getWeatherData(\n        \"hourly\",\n        place.place_id,\n        measurementSystem\n      );\n      setHourlyForecast(hf.hourly.data);\n\n      const df = await getWeatherData(\n        \"daily\",\n        place.place_id,\n        measurementSystem\n      );\n      setDailyForecast(df.daily.data);\n\n      setLoading(false);\n    }\n    _getWeatherData();\n  }, [place, measurementSystem]);\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        place,\n        setPlace,\n        loading,\n        currentWeather,\n        hourlyForecast,\n        dailyForecast,\n        measurementSystem,\n        setMeasurementSystem,\n        units,\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  );\n}\n\nexport { WeatherProvider };\nexport default WeatherContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,aAAa,EAAEC,mBAAmB,EAAEC,KAAK,QAAQ,cAAc;AACxE,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAEtC,SAASU,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACC,aAAa,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CACxDE,mBAAmB,CAACqB,IACtB,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,eAAe2B,eAAeA,CAAA,EAAG;MAC/BZ,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMa,EAAE,GAAG,MAAMvB,cAAc,CAC7B,SAAS,EACTO,KAAK,CAACiB,QAAQ,EACdP,iBACF,CAAC;MACDL,iBAAiB,CAACW,EAAE,CAACE,OAAO,CAAC;MAC7BJ,QAAQ,CAACtB,KAAK,CAACwB,EAAE,CAACH,KAAK,CAAC,CAAC;MAEzB,MAAMM,EAAE,GAAG,MAAM1B,cAAc,CAC7B,QAAQ,EACRO,KAAK,CAACiB,QAAQ,EACdP,iBACF,CAAC;MACDH,iBAAiB,CAACY,EAAE,CAACC,MAAM,CAACC,IAAI,CAAC;MAEjC,MAAMC,EAAE,GAAG,MAAM7B,cAAc,CAC7B,OAAO,EACPO,KAAK,CAACiB,QAAQ,EACdP,iBACF,CAAC;MACDD,gBAAgB,CAACa,EAAE,CAACC,KAAK,CAACF,IAAI,CAAC;MAE/BlB,UAAU,CAAC,KAAK,CAAC;IACnB;IACAY,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACf,KAAK,EAAEU,iBAAiB,CAAC,CAAC;EAE9B,oBACEf,OAAA,CAACC,cAAc,CAAC4B,QAAQ;IACtBC,KAAK,EAAE;MACLzB,KAAK;MACLC,QAAQ;MACRC,OAAO;MACPE,cAAc;MACdE,cAAc;MACdE,aAAa;MACbE,iBAAiB;MACjBC,oBAAoB;MACpBE;IACF,CAAE;IAAAf,QAAA,EAEDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B;AAAC9B,EAAA,CA3DQF,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA6DxB,SAASA,eAAe;AACxB,eAAeD,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}