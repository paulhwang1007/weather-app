{"ast":null,"code":"var _jsxFileName = \"/Users/paulhwang/code/projects/weather-app/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/components/Settings.scss\";\nimport { useContext } from \"react\";\nimport ThemeContext from \"../context/theme.context\";\nimport { MEASUREMENT_SYSTEMS } from \"../constants\";\nimport WeatherContext from \"../context/weather.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [openSettings, setOpenSettings] = useState(false);\n  const {\n    dark,\n    setDark,\n    saveThemeToLocalStorage\n  } = useContext(ThemeContext);\n  const {\n    measurementSystem,\n    setMeasurementSystem\n  } = useContext(WeatherContext);\n  const changeMeasurementSystem = system => {\n    setMeasurementSystem(system);\n    setOpenSettings(false);\n  };\n  const toggleTheme = () => {\n    setDark(prevDark => !prevDark);\n    saveThemeToLocalStorage(!dark);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-toggler\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-buttons\",\n        onClick: toggleTheme,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `light-theme-btn ${dark ? \"\" : \"active\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dark-theme-btn ${dark ? \"active\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-moon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-btn\",\n      onClick: () => setOpenSettings(prevVal => !prevVal),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `bi bi-gear${openSettings ? \"-fill\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `settings-menu ${openSettings ? \"open\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measurement-systems\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Measurement Systems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"systems\",\n          children: Object.values(MEASUREMENT_SYSTEMS).map(system => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `system ${system === measurementSystem ? \"active\" : \"\"}`,\n            onClick: () => changeMeasurementSystem(system),\n            children: system\n          }, system, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"dWAMTsdBupk8Q8qOHmYub7ExVFQ=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useContext","ThemeContext","MEASUREMENT_SYSTEMS","WeatherContext","jsxDEV","_jsxDEV","Settings","_s","openSettings","setOpenSettings","dark","setDark","saveThemeToLocalStorage","measurementSystem","setMeasurementSystem","changeMeasurementSystem","system","toggleTheme","prevDark","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","prevVal","Object","values","map","_c","$RefreshReg$"],"sources":["/Users/paulhwang/code/projects/weather-app/src/components/Settings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/components/Settings.scss\";\nimport { useContext } from \"react\";\nimport ThemeContext from \"../context/theme.context\";\nimport { MEASUREMENT_SYSTEMS } from \"../constants\";\nimport WeatherContext from \"../context/weather.context\";\n\nfunction Settings() {\n  const [openSettings, setOpenSettings] = useState(false);\n  const { dark, setDark, saveThemeToLocalStorage } = useContext(ThemeContext);\n  const { measurementSystem, setMeasurementSystem } =\n    useContext(WeatherContext);\n\n  const changeMeasurementSystem = (system) => {\n    setMeasurementSystem(system);\n    setOpenSettings(false);\n  };\n\n  const toggleTheme = () => {\n    setDark((prevDark) => !prevDark);\n    saveThemeToLocalStorage(!dark);\n  };\n  return (\n    <div className=\"Settings\">\n      <div className=\"theme-toggler\">\n        <div className=\"theme-buttons\" onClick={toggleTheme}>\n          <div className={`light-theme-btn ${dark ? \"\" : \"active\"}`}>\n            <i className=\"bi bi-sun\"></i>\n          </div>\n          <div className={`dark-theme-btn ${dark ? \"active\" : \"\"}`}>\n            <i className=\"bi bi-moon\"></i>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"settings-btn\"\n        onClick={() => setOpenSettings((prevVal) => !prevVal)}\n      >\n        <i className={`bi bi-gear${openSettings ? \"-fill\" : \"\"}`}></i>\n      </div>\n      <div className={`settings-menu ${openSettings ? \"open\" : \"\"}`}>\n        <div className=\"measurement-systems\">\n          <h4>Measurement Systems</h4>\n          <div className=\"systems\">\n            {Object.values(MEASUREMENT_SYSTEMS).map((system) => (\n              <div\n                className={`system ${\n                  system === measurementSystem ? \"active\" : \"\"\n                }`}\n                key={system}\n                onClick={() => changeMeasurementSystem(system)}\n              >\n                {system}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}